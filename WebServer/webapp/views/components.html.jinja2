{%- macro tab_button(idx, current, is_icon = false, text = "" , title = "", disabled = false) -%}
    <button class="{{ "icon" if is_icon else "" }} {{ "active" if idx == current else "" }}"
            title="{{ title }}"
            {% if disabled %}disabled{% endif %}
            hx-get="?tab={{ idx }}"
            hx-target="closest .tabs"
            hx-swap="innerHTML">{{ text }}</button>
{%- endmacro -%}
{%- macro link(search = "", take = 20, skip = 0) -%}
    {%- if search != "" or take != 20 or skip != 0 -%}
        ?
    {%- endif -%}
    {%- if search != "" -%}
        search={{ search }}
    {%- endif -%}
    {%- if search != "" and take != 20 -%}
        &
    {%- endif -%}
    {%- if take != 20 -%}
        take={{ take }}
    {%- endif -%}
    {%- if (search != "" or take != 20) and skip != 0 -%}
        &
    {%- endif -%}
    {%- if skip != 0 -%}
        skip={{ skip }}
    {%- endif -%}
{%- endmacro -%}
{%- macro time_to_min(secs) -%}
    {% if secs is not none %}
        {{ "%02d:%02d"|format(secs // 60000, (secs // 1000) % 60)}}
    {% endif %}
{%- endmacro -%}
{%- macro format_duration(duration) -%}
    {% if duration %}
        {{ time_to_min(duration) ~ " min" }}
    {% else %}
        -
    {% endif %}
{%- endmacro -%}
{%- macro transcript(recording, paragraph_class = "") -%}
    {% for i in range(recording.transcript.entries|count) %}
        {%- set entry = recording.transcript.entries[i] -%}
        {%- set speaker = recording.speaker_mapping[entry.speaker] -%}
        <div class="transcript-entry {{ speaker }}"
             id="{{ "entry-" ~ entry.start_time }}"
             hx-on:click="skipToTime({{ entry.start_time }})">
            <p class={{ paragraph_class }}>
                {{ caller(i) }}
            </p>
            <span><span>{{ speaker }}</span> {{ time_to_min(entry.start_time) }}</span>
        </div>
    {% endfor %}
{%- endmacro -%}
{%- macro rating(score, background = "secondary", large = false) -%}
    <div class="rating {{ 'large' if large else '' }}"
         style="background-color: var(--{{ background }})">
        <div style="{{ 'background-image: conic-gradient(var(--primary) ' ~ score ~ '%, transparent 0 100%);
                    ' }}">
            <span>{{ score }}</span>
        </div>
    </div>
{%- endmacro -%}
{%- macro agent(agent) -%}
    <button class="chip" tabindex="1">
        <object class="avatar"></object>
        {% if agent %}
            {{ agent.name }}
        {% else %}
            Unknown
        {% endif %}
    </button>
{%- endmacro -%}
