{% import "components.html.jinja2" as components %}
{%- macro transcript() -%}
    {%- call components.progress_circle(link=recording.id ~ "/transcript?delay=" ~ delay, delay=delay, load=(not recording.transcript)) -%}
        {% for entry in recording.transcript.entries %}
            <div class="transcript-entry" id={{ "entry-" ~ entry.start_time }} hx-on:click="skipToTime({{entry.start_time / 1000}})">
                <object class="avatar"></object>
                <header>
                    {% set speaker = recording.speaker_mapping["speaker " ~ entry.speaker] %}
                    <span class="{{ speaker }}">{{ speaker }}</span>
                    <span>{{ components.time_to_min(entry.start_time) }}</span>
                </header>
                <p>{{ entry.text }}</p>
            </div>
        {% endfor %}
    {%- endcall -%}
{%- endmacro -%}
{%- macro summary() -%}
    {%- call components.progress_circle(link=recording.id ~ "/summary?delay=" ~ delay, delay=delay, load=(not recording.summary)) -%}
        <p>{{ recording.summary }}</p>
    {%- endcall -%}
{%- endmacro -%}
{%- macro ner() -%}
    {%- call components.progress_circle(link=recording.id ~ "/ner?delay=" ~ delay, delay=delay, load=(not recording.ner)) -%}
        {% for i in range(recording.transcript.entries|count) %}
            {%- set transcript_entry = recording.transcript.entries[i] -%}
            {%- set ner_entries = recording.ner.entries[i] -%}
            <div class="transcript-entry" id={{ "entry-" ~ transcript_entry.start_time }}>
                <object class="avatar"></object>
                <header>
                    {% set speaker = recording.speaker_mapping["speaker " ~ transcript_entry.speaker] %}
                    <span class="{{ speaker }}">{{ speaker }}</span>
                    <span>{{ components.time_to_min(transcript_entry.start_time) }}</span>
                </header>
                <p>{{ components.ner(transcript_entry.text, ner_entries) }}</p>
            </div>
        {% endfor %}
    {%- endcall -%}
{%- endmacro -%}
{%- macro ner_details() -%}
    {%- call components.progress_circle(link=recording.id ~ "/ner-details?delay=" ~ delay, delay=delay, load=(not recording.ner)) -%}
        {%- for entity in [("People", "persName"), ("Places", "placeName"), ("Organizations", "orgName"), ("Dates", "date"), ("Time", "time")] -%}
            {{ components.ner_details(entity, recording.transcript.entries, recording.ner.entries) }}
        {%- endfor -%}
    {%- endcall -%}
{%- endmacro -%}
{% if content == "transcript" %}
    {{ transcript() }}
{% elif content == "summary" %}
    {{ summary() }}
{% elif content == "ner" %}
    {{ ner() }}
{% endif %}
