{% import "components.html.jinja2" as components %}
{%- macro transcript() -%}
    {%- call(i) components.transcript(recording) -%}
        {{ recording.transcript.entries[i].text }}
    {%- endcall -%}
{%- endmacro -%}
{%- macro summary() -%}
    <p>{{ recording.summary }}</p>
{%- endmacro -%}
{%- macro ner() -%}
    {%- call(i) components.transcript(recording) -%}
        {%- set entries = recording.ner.entries[i] -%}
        {%- set text = recording.transcript.entries[i].text -%}
        {% if recording.ner.entries[i]|count == 0 %}
            {{ text }}
        {% else %}
            {%- for i in range(entries|count) -%}
                {%- set start_char = 0 if i == 0 else entries[i - 1].end_char -%}
                {{- text[start_char:entries[i].start_char] -}}
                <mark style="background-color: var(--ner-{{ entries[i].entity }});">{{- text[entries[i].start_char:entries[i].end_char] -}}</mark>
            {%- endfor -%}
            {{- text[entries[-1].end_char:] -}}
        {% endif %}
    {%- endcall -%}
{%- endmacro -%}
{%- macro ner_details() -%}
    {%- set transcript_entries = recording.transcript.entries -%}
    {%- set ner_entries = recording.ner.entries -%}
    {%- set seen = [] -%}
    {%- for i in range(transcript_entries|count) -%}
        {%- for entry in ner_entries[i] -%}
            {%- set text = entry.lemmas|join(" ") -%}
            {%- set ns = namespace(is_new=True) -%}
            {%- for j in range(seen|count) -%}
                {%- if seen[j][0] != entry.entity -%}
                    {%- continue -%}
                {%- elif text in seen[j][2] -%}
                    {%- set ns.is_new = False -%}
                {%- elif seen[j][2] in text -%}
                    {% do seen.__setitem__(j, (entry.entity, i, text)) %}
                    {%- set ns.is_new = False -%}
                {%- endif -%}
            {%- endfor -%}
            {%- if ns.is_new -%}
                {% do seen.append((entry.entity, i, text)) %}
            {%- endif -%}
        {%- endfor -%}
    {%- endfor -%}
    {%- for entity in [("People", "persName"), ("Places", "placeName"), ("Organizations", "orgName"), ("Dates", "date"), ("Time", "time")] -%}
        {%- if not seen|selectattr(0, "equalto", entity[1])|list -%}
            {%- continue -%}
        {%- endif -%}
        <details>
            <summary>
                <span><span class="circle" style="background-color: var(--ner-{{ entity[1] }});"></span>{{ entity[0] }}</span>
            </summary>
            <ul>
                {%- for s in seen -%}
                    {%- if s[0] == entity[1] -%}
                        <li hx-get="#entry-{{ transcript_entries[s[1]].start_time }}"
                            hx-swap="none">{{ s[2] }}</li>
                    {%- endif -%}
                {%- endfor -%}
            </ul>
        </details>
    {%- endfor -%}
{%- endmacro -%}
{%- macro conformity() -%}
    {%- call(i) components.transcript(recording, "conformity") -%}
        {%- for result in recording.conformity.results -%}
            {%- if result.entry_id == i -%}
                <span class="icon">check_circle</span>
            {%- endif -%}
        {%- endfor -%}
        {{ recording.transcript.entries[i].text }}
    {%- endcall -%}
{%- endmacro -%}
{%- macro conformity_details() -%}
    {%- set transcript_entries = recording.transcript.entries -%}
    {%- set conformity_results = recording.conformity.results -%}
    <div>
        {%- set score = (100 * conformity_results|selectattr("passed", "true")|list|count / conformity_results|count)|int -%}
        {{ components.rating(score) }}
        <h5>Conformity Rating</h5>
    </div>
    <div>
        {%- set map = {
            "recommendation": "Recommendation",
            "greeting": "Greeting",
            "client_identity_confirmation": "Client's identity confirmation",
            "contact_for_questions": "Contact for questions"
        } -%}
        {%- for result in recording.conformity.results -%}
            {%- if result.passed -%}
                <div hx-get="#entry-{{ transcript_entries[result.entry_id].start_time }}"
                        hx-swap="none">
                    <span class="icon" style="color: #3fe03f;">check_circle</span><u>{{ map[result.intent_name] }}</u>
                </div>
            {%- else -%}
                <div>
                    <span class="icon" style="color: red;">cancel</span>{{ map[result.intent_name] }}
                </div>
            {%- endif -%}
        {%- endfor -%}
    </div>
{%- endmacro -%}
{% macro render_content(content) %}
    {% if content == "transcript" and recording.transcript and recording.speaker_mapping %}
        {{ transcript() }}
    {% elif (content == "summary") and recording.summary %}
        {{ summary() }}
    {% elif content == "ner" and recording.ner %}
        {{ ner() }}
    {% elif content == "ner-details" and recording.ner %}
        {{ ner_details() }}
    {% elif content == "conformity" and recording.conformity %}
        {{ conformity() }}
    {% elif content == "conformity-details" and recording.conformity %}
        {{ conformity_details() }}
    {% else %}
        {{ content | upper }} not found. Please run analysis first.
    {% endif %}
{% endmacro%}

{{ render_content(content) }}